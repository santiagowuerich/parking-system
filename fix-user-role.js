const { createClient } = require('@supabase/supabase-js');

const supabase = createClient(
    process.env.NEXT_PUBLIC_SUPABASE_URL || 'your-supabase-url',
    process.env.SUPABASE_SERVICE_ROLE_KEY || 'your-service-role-key'
);

async function fixUserRole() {
    console.log('üîß Verificando y arreglando rol del usuario prueba23@gmail.com...\n');

    try {
        // 1. Buscar usuario por email
        console.log('1. Buscando usuario...');
        const { data: usuario, error: userError } = await supabase
            .from('usuario')
            .select('*')
            .eq('usu_email', 'prueba23@gmail.com')
            .single();

        if (userError || !usuario) {
            console.log('‚ùå Usuario no encontrado:', userError);
            return;
        }

        console.log('‚úÖ Usuario encontrado:', {
            usu_id: usuario.usu_id,
            email: usuario.usu_email,
            auth_user_id: usuario.auth_user_id
        });

        // 2. Verificar si ya tiene registro como due√±o
        console.log('\n2. Verificando registro como due√±o...');
        const { data: duenoExistente, error: duenoError } = await supabase
            .from('dueno')
            .select('*')
            .eq('due_id', usuario.usu_id)
            .single();

        if (duenoExistente) {
            console.log('‚úÖ Usuario YA es due√±o:', duenoExistente);
        } else {
            console.log('‚ö†Ô∏è Usuario NO tiene registro como due√±o. Creando...');

            // 3. Crear registro como due√±o
            const { data: nuevoDueno, error: createError } = await supabase
                .from('dueno')
                .insert({ due_id: usuario.usu_id })
                .select()
                .single();

            if (createError) {
                console.log('‚ùå Error creando registro de due√±o:', createError);
            } else {
                console.log('‚úÖ Registro de due√±o creado exitosamente:', nuevoDueno);
            }
        }

        // 4. Verificar si ya tiene estacionamiento
        console.log('\n3. Verificando estacionamiento...');
        const { data: estacionamiento, error: estError } = await supabase
            .from('estacionamientos')
            .select('*')
            .eq('due_id', usuario.usu_id)
            .single();

        if (estacionamiento) {
            console.log('‚úÖ Usuario YA tiene estacionamiento:', estacionamiento);
        } else {
            console.log('‚ö†Ô∏è Usuario NO tiene estacionamiento. Esto es normal para usuarios nuevos.');
            console.log('‚ÑπÔ∏è El estacionamiento se crear√° cuando complete la configuraci√≥n inicial.');
        }

        console.log('\nüéØ RESUMEN:');
        console.log(`   Usuario ID: ${usuario.usu_id}`);
        console.log(`   Email: ${usuario.usu_email}`);
        console.log(`   Es due√±o: ${!!duenoExistente}`);
        console.log(`   Tiene estacionamiento: ${!!estacionamiento}`);
        console.log(`   Rol esperado: owner`);

    } catch (error) {
        console.error('‚ùå Error:', error);
    }
}

fixUserRole();
