# COMANDOS PARA TRABAJAR CON VERSIONES ANTERIORES EN GIT

## 1. VER HISTORIAL DE COMMITS
# Ver los últimos 10 commits
git log --oneline -10

# Ver todos los commits con más detalle
git log --graph --decorate --oneline

# Ver commits con estadísticas
git log --stat

## 2. VER INFORMACIÓN DE UN COMMIT ESPECÍFICO
# Ver información completa de un commit
git show <hash-del-commit>

# Ver solo archivos modificados
git show --name-only <hash-del-commit>

# Ver solo estadísticas del commit
git show --stat <hash-del-commit>

## 3. VOLVER A UNA VERSIÓN ANTERIOR
# Crear nueva rama desde un commit específico
git checkout -b nueva-rama <hash-del-commit>

# Cambiar a un commit específico (modo detached HEAD)
git checkout <hash-del-commit>

# Volver a rama principal
git checkout main

## 4. REVERTIR CAMBIOS
# Revertir un commit específico creando nuevo commit
git revert <hash-del-commit>

# Reset a un commit anterior (CUIDADO: pierde cambios)
git reset --hard <hash-del-commit>

# Reset pero manteniendo cambios en working directory
git reset --soft <hash-del-commit>

## 5. VER DIFERENCIAS
# Ver diferencias entre commits
git diff <commit1> <commit2>

# Ver diferencias con el commit anterior
git diff HEAD~1

## 6. TRABAJAR CON RAMAS REMOTAS
# Ver todas las ramas (locales y remotas)
git branch -a

# Descargar todas las ramas del remoto
git fetch --all

# Cambiar a una rama remota
git checkout origin/<nombre-rama>

## 7. EJEMPLOS PRÁCTICOS
# Ver el último commit
git show HEAD

# Ver commits de las últimas 24 horas
git log --since="24 hours ago"

# Buscar commits por mensaje
git log --grep="palabra clave"

# Ver commits por autor
git log --author="nombre"

## 8. REFS Y REFERENCIAS
# Ver reflog (historial de movimientos)
git reflog

# Ver tags disponibles
git tag

# Crear tag en commit específico
git tag v1.0 <hash-del-commit>
